u(".debug").on("click",()=>{u(".vHeight").text(`Viewport Height: ${u("body").size().height}`),u(".wHeight").text(`Window Height: ${window.innerHeight}`)});const r=document.querySelector(":root"),cssVar={set:(variable,value)=>{r.style.setProperty(`--${variable}`,value)},get:variable=>getComputedStyle(r).getPropertyValue(`--${variable}`)},windowResize=()=>{cssVar.set("wHeight",window.innerHeight/100),cssVar.set("wWidth",window.innerWidth/100),cssVar.set("wMin",window.innerHeight<=window.innerWidth?window.innerHeight/100:window.innerWidth/100),cssVar.set("wMax",window.innerHeight>=window.innerWidth?window.innerHeight/100:window.innerWidth/100)};function clickCell(cellId){u(`#${cellId}`).toggleClass("clicked")}windowResize(),window.addEventListener("resize",windowResize),u(".startGameBtn").on("click",()=>{var gridSize=10;try{u(".gridCell").remove();for(var r=0;r<10;r++)for(var c=0;c<10;c++)try{u(".gameGrid").append(u("<div>").addClass("gridCell").attr("row",r).attr("column",c).attr("id",`r${r}c${c}`).attr("onclick",'clickCell(u(this).attr("id"))'))}catch(err){console.log("Error: ",err);break}finally{console.log("Added a grid cell")}}catch(err){console.log("Error: ",err)}finally{u(".gameGrid").attr("style","grid-template-columns: repeat(10, 1fr); grid-template-rows, repeat(10, 1fr)")}});